<?php

namespace Fsb\RuleBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UnavailableDateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UnavailableDateRepository extends EntityRepository
{
	
	/**
	 * Return the unavailable date if this day is unavailable for a recruiter
	 *
	 * @return boolean
	 *
	 */
	public function getUnavailableDatesByRecruiter($recruiter_id){
	
		$em = $this->getEntityManager();
		
		$query = $em->createQueryBuilder()
		->select(array('ud.unavailableDate', 'r.reason', 'ud.id'))
		->from('RuleBundle:UnavailableDate', 'ud')
		->innerJoin('ud.reason', 'r')
		->where('ud.recruiter = :recruiter_id')
		->orWhere('ud.recruiter is null')
		->andWhere('ud.allDay = true')
		->orderBy('ud.unavailableDate', 'ASC')
		
		->setParameter('recruiter_id', $recruiter_id)
		;
		
		$unavailableDate = $query->getQuery()->getResult();
		
		return $unavailableDate;
	}
	
	/**
	 * Return the unavailable times for a day for a recruiter
	 *
	 * @return boolean
	 *
	 */
	public function getUnavailableTimesByRecruiter($recruiter_id, $day){
	
		$em = $this->getEntityManager();
	
		$query = $em->createQueryBuilder()
		->select(array('ud.startTime', 'ud.endTime', 'ud.id'))
		->from('RuleBundle:UnavailableDate', 'ud')
		->innerJoin('ud.reason', 'r')
		->where('ud.recruiter = :recruiter_id')
		->andWhere('ud.allDay = false')
		->andWhere('ud.unavailableDate = :day')
		->orderBy('ud.unavailableDate', 'ASC')
	
		->setParameter('recruiter_id', $recruiter_id)
		->setParameter('day', $day)
		;
	
		$unavailableDate = $query->getQuery()->getResult();
	
		return $unavailableDate;
	}
}
